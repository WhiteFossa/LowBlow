Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o (exit)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              ./hal.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
                              ./main.o (__umulsidi3)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
                              /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o) (__muldi3)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_byte.o)
                              ./main.o (eeprom_read_byte)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_word.o)
                              ./main.o (eeprom_read_word)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_block.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_word.o) (eeprom_read_blraw)

Allocating common symbols
Common symbol       size              file

hal_tacho_counter   0x2               ./hal.o
mn_max_rpm          0x2               ./hal.o
mn_min_duty_cycle   0x1               ./hal.o
mn_flags0           0x1               ./hal.o
mn_seconds_delay_counter
                    0x1               ./hal.o
hal_flags0          0x1               ./hal.o
mn_target_rpm       0x2               ./hal.o
mn_min_rpm          0x2               ./hal.o
hal_timer1_overflows_number
                    0x2               ./hal.o
hal_adc_accumulator
                    0x4               ./hal.o
hal_temperature     0x2               ./hal.o
hal_adc_avg_counter
                    0x1               ./hal.o
hal_tacho           0x2               ./hal.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
LOAD ./hal.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a
END GROUP
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x8ee
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
 *(.init2)
 *(.init3)
 .init3         0x0000000000000026       0x2a ./hal.o
                0x0000000000000026                hal_early_init
 *(.init3)
 *(.init4)
 .init4         0x0000000000000050       0x10 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000050                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000060        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
 *(.init9)
 *(.text)
 .text          0x0000000000000064        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
                0x0000000000000064                __vector_12
                0x0000000000000064                __bad_interrupt
                0x0000000000000064                __vector_6
                0x0000000000000064                __vector_3
                0x0000000000000064                __vector_11
                0x0000000000000064                __vector_13
                0x0000000000000064                __vector_7
                0x0000000000000064                __vector_5
                0x0000000000000064                __vector_9
                0x0000000000000064                __vector_2
                0x0000000000000064                __vector_14
                0x0000000000000064                __vector_10
 .text          0x0000000000000066        0x0 ./hal.o
 .text          0x0000000000000066        0x0 ./main.o
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_byte.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_word.o)
 .text          0x0000000000000066        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_block.o)
                0x0000000000000066                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_4
                0x0000000000000066       0x74 ./hal.o
                0x0000000000000066                __vector_4
 .text.__vector_1
                0x00000000000000da       0x3e ./hal.o
                0x00000000000000da                __vector_1
 .text.__vector_8
                0x0000000000000118      0x110 ./hal.o
                0x0000000000000118                __vector_8
 .text.hal_second_tick
                0x0000000000000228       0x50 ./hal.o
                0x0000000000000228                hal_second_tick
 .text.hal_init
                0x0000000000000278      0x130 ./hal.o
                0x0000000000000278                hal_init
 .text.hal_set_cooler_duty_cycle
                0x00000000000003a8       0x52 ./hal.o
                0x00000000000003a8                hal_set_cooler_duty_cycle
 .text.hal_stop_cooler
                0x00000000000003fa       0x32 ./hal.o
                0x00000000000003fa                hal_stop_cooler
 .text.hal_start_cooler
                0x000000000000042c       0x20 ./hal.o
                0x000000000000042c                hal_start_cooler
 .text.main     0x000000000000044c       0xda ./main.o
                0x000000000000044c                main
 .text.mn_second_tick
                0x0000000000000526       0x5c ./main.o
                0x0000000000000526                mn_second_tick
 .text.mn_seconds_delay
                0x0000000000000582       0x26 ./main.o
                0x0000000000000582                mn_seconds_delay
 .text.mn_set_target_rpm
                0x00000000000005a8       0xb6 ./main.o
                0x00000000000005a8                mn_set_target_rpm
 .text.mn_set_rpm_in_percents
                0x000000000000065e       0xa8 ./main.o
                0x000000000000065e                mn_set_rpm_in_percents
 .text.mn_lookup_rpm
                0x0000000000000706       0xc0 ./main.o
                0x0000000000000706                mn_lookup_rpm
 .text.libgcc.mul
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000007c6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000007c6       0x3a /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
                0x00000000000007c6                __mulsidi3
                0x00000000000007ca                __umulsidi3
 .text.libgcc.div
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc   0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.prologue
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.builtins
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.fmul
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.fixed
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.mul
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc   0x0000000000000800        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x0000000000000800       0x2e /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
                0x0000000000000800                __prologue_saves__
 .text.libgcc.builtins
                0x000000000000082e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x000000000000082e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x000000000000082e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x000000000000082e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x000000000000082e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc   0x000000000000082e        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x000000000000082e       0x2c /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
                0x000000000000082e                __epilogue_restores__
 .text.libgcc.builtins
                0x000000000000085a        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x000000000000085a        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x000000000000085a        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.mul
                0x000000000000085a       0x5c /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
                0x000000000000085a                __muldi3
 .text.libgcc.div
                0x00000000000008b6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc   0x00000000000008b6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.prologue
                0x00000000000008b6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.builtins
                0x00000000000008b6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.fmul
                0x00000000000008b6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.fixed
                0x00000000000008b6        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.avr-libc
                0x00000000000008b6       0x10 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_byte.o)
                0x00000000000008b6                eeprom_read_byte
 .text.avr-libc
                0x00000000000008c6        0x6 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_word.o)
                0x00000000000008c6                eeprom_read_word
 .text.avr-libc
                0x00000000000008cc       0x1e /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_block.o)
                0x00000000000008cc                eeprom_read_block
                0x00000000000008d0                eeprom_read_blraw
                0x00000000000008ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000008ea        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x00000000000008ea                exit
                0x00000000000008ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000008ea        0x4 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000008ee                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000008ee
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
 .data          0x0000000000800060        0x0 ./hal.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_byte.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_word.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_block.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x17
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o
 .bss           0x0000000000800060        0x0 ./hal.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_prologue.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_byte.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_word.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny25.a(eerd_block.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800060       0x17 ./hal.o
                0x0000000000800060                hal_tacho_counter
                0x0000000000800062                mn_max_rpm
                0x0000000000800064                mn_min_duty_cycle
                0x0000000000800065                mn_flags0
                0x0000000000800066                mn_seconds_delay_counter
                0x0000000000800067                hal_flags0
                0x0000000000800068                mn_target_rpm
                0x000000000080006a                mn_min_rpm
                0x000000000080006c                hal_timer1_overflows_number
                0x000000000080006e                hal_adc_accumulator
                0x0000000000800072                hal_temperature
                0x0000000000800074                hal_adc_avg_counter
                0x0000000000800075                hal_tacho
                0x0000000000800077                PROVIDE (__bss_end, .)
                0x00000000000008ee                __data_load_start = LOADADDR (.data)
                0x00000000000008ee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800077        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800077                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x11c4
 *(.stab)
 .stab          0x0000000000000000      0x9a8 ./hal.o
 .stab          0x00000000000009a8      0x81c ./main.o
                                        0xa38 (size before relaxing)

.stabstr        0x0000000000000000      0xf28
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf28 ./hal.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./hal.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny25.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(PowerUnitCoolerController.elf elf32-avr)
LOAD linker stubs
